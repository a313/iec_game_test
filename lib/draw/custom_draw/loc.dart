import 'package:flutter/material.dart';
import 'package:flutter_drawing_board/paint_contents.dart';

class LocationPainter extends PaintContent {
  LocationPainter();

  Offset startPoint = Offset.zero;

  LocationPainter.data({
    required Paint paint,
  }) : super.paint(paint);

  @override
  LocationPainter copy() => LocationPainter();

  @override
  void draw(Canvas canvas, Size size, bool deeper) {
    canvas.save();
    canvas.translate(startPoint.dx, startPoint.dy);
    Path path_0 = Path();
    path_0.moveTo(93.5273, 145.852);
    path_0.cubicTo(90.3702, 146.641, 87.3287, 147.903, 84.7252, 149.856);
    path_0.cubicTo(82.1439, 151.792, 80.0487, 154.302, 78.6057, 157.188);
    path_0.lineTo(78.1466, 158.107);
    path_0.cubicTo(77.2622, 159.876, 74.7378, 159.876, 73.8534, 158.107);
    path_0.lineTo(73.3942, 157.188);
    path_0.cubicTo(71.9512, 154.302, 69.8561, 151.792, 67.2748, 149.856);
    path_0.cubicTo(64.6713, 147.903, 61.6298, 146.641, 58.4727, 145.852);
    path_0.cubicTo(27.179, 138.024, 4, 109.719, 4, 76);
    path_0.cubicTo(4, 36.2355, 36.2355, 4, 76, 4);
    path_0.cubicTo(115.765, 4, 148, 36.2355, 148, 76);
    path_0.cubicTo(148, 109.719, 124.821, 138.024, 93.5273, 145.852);
    path_0.close();
    path_0.moveTo(76, 184);
    path_0.cubicTo(79.9765, 184, 83.2, 180.776, 83.2, 176.8);
    path_0.cubicTo(83.2, 172.824, 79.9765, 169.6, 76, 169.6);
    path_0.cubicTo(72.0236, 169.6, 68.8, 172.824, 68.8, 176.8);
    path_0.cubicTo(68.8, 180.776, 72.0236, 184, 76, 184);
    path_0.close();

    Paint paint0Fill = Paint()..style = PaintingStyle.fill;
    paint0Fill.color = const Color(0xffDDF247).withOpacity(1.0);
    canvas.drawPath(path_0, paint0Fill);

    Path path_1 = Path();
    path_1.moveTo(84.7252, 149.856);
    path_1.lineTo(86.8852, 152.736);
    path_1.lineTo(86.8852, 152.736);
    path_1.lineTo(84.7252, 149.856);
    path_1.close();
    path_1.moveTo(93.5273, 145.852);
    path_1.lineTo(92.6538, 142.359);
    path_1.lineTo(92.6538, 142.359);
    path_1.lineTo(93.5273, 145.852);
    path_1.close();
    path_1.moveTo(67.2748, 149.856);
    path_1.lineTo(65.1148, 152.736);
    path_1.lineTo(65.1148, 152.736);
    path_1.lineTo(67.2748, 149.856);
    path_1.close();
    path_1.moveTo(58.4727, 145.852);
    path_1.lineTo(59.3462, 142.359);
    path_1.lineTo(59.3462, 142.359);
    path_1.lineTo(58.4727, 145.852);
    path_1.close();
    path_1.moveTo(86.8852, 152.736);
    path_1.cubicTo(89.01, 151.142, 91.5782, 150.05, 94.4008, 149.344);
    path_1.lineTo(92.6538, 142.359);
    path_1.cubicTo(89.1621, 143.233, 85.6473, 144.664, 82.5652, 146.976);
    path_1.lineTo(86.8852, 152.736);
    path_1.close();
    path_1.moveTo(81.8257, 158.798);
    path_1.cubicTo(83.0187, 156.412, 84.751, 154.337, 86.8852, 152.736);
    path_1.lineTo(82.5652, 146.976);
    path_1.cubicTo(79.5368, 149.247, 77.0787, 152.193, 75.3858, 155.578);
    path_1.lineTo(81.8257, 158.798);
    path_1.close();
    path_1.moveTo(81.3666, 159.717);
    path_1.lineTo(81.8257, 158.798);
    path_1.lineTo(75.3858, 155.578);
    path_1.lineTo(74.9267, 156.497);
    path_1.lineTo(81.3666, 159.717);
    path_1.close();
    path_1.moveTo(70.6334, 159.717);
    path_1.cubicTo(72.8446, 164.139, 79.1554, 164.139, 81.3666, 159.717);
    path_1.lineTo(74.9267, 156.497);
    path_1.cubicTo(75.3689, 155.612, 76.6311, 155.612, 77.0733, 156.497);
    path_1.lineTo(70.6334, 159.717);
    path_1.close();
    path_1.moveTo(70.1743, 158.798);
    path_1.lineTo(70.6334, 159.717);
    path_1.lineTo(77.0733, 156.497);
    path_1.lineTo(76.6142, 155.578);
    path_1.lineTo(70.1743, 158.798);
    path_1.close();
    path_1.moveTo(65.1148, 152.736);
    path_1.cubicTo(67.249, 154.337, 68.9812, 156.412, 70.1743, 158.798);
    path_1.lineTo(76.6142, 155.578);
    path_1.cubicTo(74.9212, 152.193, 72.4632, 149.247, 69.4348, 146.976);
    path_1.lineTo(65.1148, 152.736);
    path_1.close();
    path_1.moveTo(57.5992, 149.344);
    path_1.cubicTo(60.4218, 150.05, 62.9899, 151.142, 65.1148, 152.736);
    path_1.lineTo(69.4348, 146.976);
    path_1.cubicTo(66.3527, 144.664, 62.8378, 143.233, 59.3462, 142.359);
    path_1.lineTo(57.5992, 149.344);
    path_1.close();
    path_1.moveTo(0.4, 76);
    path_1.cubicTo(0.4, 111.41, 24.7413, 141.126, 57.5992, 149.344);
    path_1.lineTo(59.3462, 142.359);
    path_1.cubicTo(29.6168, 134.923, 7.6, 108.028, 7.6, 76);
    path_1.lineTo(0.4, 76);
    path_1.close();
    path_1.moveTo(76, 0.4);
    path_1.cubicTo(34.2473, 0.4, 0.4, 34.2473, 0.4, 76);
    path_1.lineTo(7.6, 76);
    path_1.cubicTo(7.6, 38.2237, 38.2237, 7.6, 76, 7.6);
    path_1.lineTo(76, 0.4);
    path_1.close();
    path_1.moveTo(151.6, 76);
    path_1.cubicTo(151.6, 34.2473, 117.753, 0.4, 76, 0.4);
    path_1.lineTo(76, 7.6);
    path_1.cubicTo(113.776, 7.6, 144.4, 38.2237, 144.4, 76);
    path_1.lineTo(151.6, 76);
    path_1.close();
    path_1.moveTo(94.4008, 149.344);
    path_1.cubicTo(127.259, 141.126, 151.6, 111.41, 151.6, 76);
    path_1.lineTo(144.4, 76);
    path_1.cubicTo(144.4, 108.028, 122.383, 134.923, 92.6538, 142.359);
    path_1.lineTo(94.4008, 149.344);
    path_1.close();
    path_1.moveTo(79.6, 176.8);
    path_1.cubicTo(79.6, 178.788, 77.9882, 180.4, 76, 180.4);
    path_1.lineTo(76, 187.6);
    path_1.cubicTo(81.9647, 187.6, 86.8, 182.765, 86.8, 176.8);
    path_1.lineTo(79.6, 176.8);
    path_1.close();
    path_1.moveTo(76, 173.2);
    path_1.cubicTo(77.9882, 173.2, 79.6, 174.812, 79.6, 176.8);
    path_1.lineTo(86.8, 176.8);
    path_1.cubicTo(86.8, 170.835, 81.9647, 166, 76, 166);
    path_1.lineTo(76, 173.2);
    path_1.close();
    path_1.moveTo(72.4, 176.8);
    path_1.cubicTo(72.4, 174.812, 74.0118, 173.2, 76, 173.2);
    path_1.lineTo(76, 166);
    path_1.cubicTo(70.0353, 166, 65.2, 170.835, 65.2, 176.8);
    path_1.lineTo(72.4, 176.8);
    path_1.close();
    path_1.moveTo(76, 180.4);
    path_1.cubicTo(74.0118, 180.4, 72.4, 178.788, 72.4, 176.8);
    path_1.lineTo(65.2, 176.8);
    path_1.cubicTo(65.2, 182.765, 70.0353, 187.6, 76, 187.6);
    path_1.lineTo(76, 180.4);
    path_1.close();

    Paint paint1Fill = Paint()..style = PaintingStyle.fill;
    paint1Fill.color = const Color(0xff21262B).withOpacity(1.0);
    canvas.drawPath(path_1, paint1Fill);

    Path path_2 = Path();
    path_2.moveTo(83.2506, 32.8578);
    path_2.cubicTo(83.0343, 32.8938, 82.714, 33.0274, 82.5389, 33.1548);
    path_2.cubicTo(82.3637, 33.282, 81.9636, 33.3862, 81.6498, 33.3862);
    path_2.cubicTo(81.3359, 33.3862, 80.9401, 33.4954, 80.7701, 33.6287);
    path_2.cubicTo(80.6003, 33.7621, 80.3397, 33.8736, 80.1912, 33.8765);
    path_2.cubicTo(79.6753, 33.8865, 77.9714, 34.9404, 77.0457, 35.8219);
    path_2.cubicTo(76.7362, 36.1167, 76.4378, 36.3584, 76.3826, 36.3587);
    path_2.cubicTo(76.0516, 36.3613, 74.1803, 39.4084, 74.1702, 39.9611);
    path_2.cubicTo(74.1675, 40.1152, 74.0601, 40.3858, 73.9315, 40.562);
    path_2.cubicTo(73.6029, 41.0132, 73.6029, 43.9297, 73.9315, 44.3808);
    path_2.cubicTo(74.0601, 44.5571, 74.1675, 44.8587, 74.1702, 45.0508);
    path_2.cubicTo(74.1731, 45.2429, 74.3186, 45.5891, 74.4936, 45.8202);
    path_2.cubicTo(74.6687, 46.0512, 74.8119, 46.35, 74.8119, 46.4841);
    path_2.cubicTo(74.8119, 46.8305, 77.8145, 49.9048, 78.1526, 49.9048);
    path_2.cubicTo(78.3069, 49.9048, 78.5222, 50.0163, 78.6312, 50.1526);
    path_2.cubicTo(78.7402, 50.2888, 78.9192, 50.4003, 79.029, 50.4003);
    path_2.cubicTo(79.1388, 50.4003, 79.3178, 50.5118, 79.4268, 50.6481);
    path_2.cubicTo(79.5359, 50.7844, 79.7773, 50.8964, 79.9635, 50.8969);
    path_2.cubicTo(80.1498, 50.8975, 80.5169, 51.0183, 80.7795, 51.1655);
    path_2.cubicTo(81.2138, 51.409, 82.019, 51.5621, 84.2805, 51.8312);
    path_2.cubicTo(85.4704, 51.9727, 88.7842, 51.575, 89.4859, 51.2061);
    path_2.cubicTo(89.8107, 51.0355, 90.2494, 50.8959, 90.4611, 50.8959);
    path_2.cubicTo(90.6726, 50.8959, 90.9348, 50.7844, 91.0438, 50.6481);
    path_2.cubicTo(91.1528, 50.5118, 91.337, 50.4003, 91.4531, 50.4003);
    path_2.cubicTo(91.5693, 50.4003, 92.2601, 49.9778, 92.9883, 49.4613);
    path_2.cubicTo(94.3359, 48.5053, 96.1362, 46.4298, 96.1362, 45.8321);
    path_2.cubicTo(96.1362, 45.6788, 96.2315, 45.436, 96.3482, 45.2926);
    path_2.cubicTo(96.6173, 44.9614, 96.9876, 43.1137, 96.9796, 42.141);
    path_2.cubicTo(96.9715, 41.139, 96.6658, 39.7412, 96.2573, 38.8373);
    path_2.cubicTo(95.9271, 38.107, 94.59, 36.1988, 94.4019, 36.1897);
    path_2.cubicTo(94.3493, 36.1871, 93.9839, 35.8851, 93.59, 35.5187);
    path_2.cubicTo(93.1962, 35.1524, 92.4084, 34.6244, 91.8395, 34.3454);
    path_2.cubicTo(91.2706, 34.0664, 90.6151, 33.7365, 90.3828, 33.6122);
    path_2.cubicTo(90.1504, 33.4879, 89.7004, 33.3862, 89.3826, 33.3862);
    path_2.cubicTo(89.0648, 33.3862, 88.6135, 33.256, 88.3799, 33.0971);
    path_2.cubicTo(88.0296, 32.8589, 87.5756, 32.8067, 85.7995, 32.8003);
    path_2.cubicTo(84.6139, 32.796, 83.467, 32.8219, 83.2506, 32.8578);
    path_2.close();
    path_2.moveTo(52.0553, 51.5581);
    path_2.cubicTo(50.6987, 51.6214, 49.3386, 51.7583, 49.0329, 51.8626);
    path_2.cubicTo(48.727, 51.967, 47.8611, 52.0522, 47.1087, 52.0522);
    path_2.cubicTo(46.3186, 52.0522, 45.4104, 52.1599, 44.9593, 52.3072);
    path_2.cubicTo(44.5296, 52.4475, 43.2113, 52.6241, 42.0297, 52.6996);
    path_2.cubicTo(40.8481, 52.7751, 39.6798, 52.9204, 39.4334, 53.0227);
    path_2.cubicTo(39.1871, 53.1249, 38.7124, 53.2085, 38.3787, 53.2085);
    path_2.cubicTo(38.0335, 53.2085, 37.6866, 53.3154, 37.5739, 53.4563);
    path_2.cubicTo(37.4649, 53.5926, 37.2808, 53.7041, 37.1646, 53.7041);
    path_2.cubicTo(37.0484, 53.7041, 36.7458, 53.9348, 36.4919, 54.2168);
    path_2.cubicTo(35.8425, 54.938, 35.5027, 56.8844, 35.504, 59.8747);
    path_2.cubicTo(35.5051, 62.0828, 35.5193, 62.1811, 35.9085, 62.6611);
    path_2.cubicTo(36.1305, 62.9348, 36.5712, 63.3415, 36.888, 63.5645);
    path_2.cubicTo(37.4294, 63.9459, 37.59, 63.9699, 39.5588, 63.9619);
    path_2.cubicTo(41.0609, 63.9562, 41.8182, 63.8825, 42.2345, 63.7019);
    path_2.cubicTo(42.6015, 63.5427, 43.3168, 63.45, 44.1781, 63.45);
    path_2.cubicTo(45.0307, 63.45, 45.7553, 63.357, 46.1133, 63.2018);
    path_2.cubicTo(46.4423, 63.0592, 47.4728, 62.9099, 48.5351, 62.8509);
    path_2.cubicTo(49.5523, 62.7946, 50.7754, 62.6461, 51.2533, 62.521);
    path_2.cubicTo(52.387, 62.2245, 55.1841, 62.2257, 56.068, 62.5233);
    path_2.cubicTo(56.4431, 62.6495, 57.127, 62.7949, 57.5879, 62.8463);
    path_2.cubicTo(58.0489, 62.8975, 58.5841, 63.0544, 58.7771, 63.1948);
    path_2.cubicTo(58.9701, 63.3352, 59.2657, 63.45, 59.4337, 63.45);
    path_2.cubicTo(59.8317, 63.45, 61.2541, 64.7165, 61.8375, 65.5903);
    path_2.cubicTo(62.2905, 66.2689, 62.2945, 66.2959, 62.2656, 68.5088);
    path_2.cubicTo(62.2458, 70.0096, 62.1653, 70.8874, 62.02, 71.1845);
    path_2.cubicTo(61.9011, 71.4277, 61.766, 72.3329, 61.7197, 73.196);
    path_2.cubicTo(61.6736, 74.0591, 61.5211, 75.0905, 61.3809, 75.4881);
    path_2.cubicTo(61.2329, 75.908, 61.1261, 76.7235, 61.1261, 77.4343);
    path_2.cubicTo(61.1261, 78.1481, 61.0267, 78.9048, 60.8874, 79.2507);
    path_2.cubicTo(60.7561, 79.577, 60.6487, 80.0182, 60.6487, 80.2314);
    path_2.cubicTo(60.6487, 80.6786, 60.0777, 81.8828, 59.6603, 82.3161);
    path_2.cubicTo(59.5037, 82.4786, 59.3756, 82.6816, 59.3756, 82.7672);
    path_2.cubicTo(59.3756, 82.9909, 57.2376, 84.6376, 56.6703, 84.8509);
    path_2.cubicTo(56.539, 84.9002, 56.1668, 85.0856, 55.8431, 85.2628);
    path_2.cubicTo(55.5194, 85.4399, 55.1213, 85.5849, 54.9585, 85.5849);
    path_2.cubicTo(54.7957, 85.5849, 54.5234, 85.6941, 54.3534, 85.8274);
    path_2.cubicTo(54.1836, 85.9609, 53.8768, 86.0724, 53.6719, 86.0752);
    path_2.cubicTo(53.4667, 86.0782, 53.1169, 86.2292, 52.8945, 86.4109);
    path_2.cubicTo(52.6718, 86.5926, 52.3025, 86.7436, 52.0736, 86.7465);
    path_2.cubicTo(51.8448, 86.7493, 51.5184, 86.8608, 51.3486, 86.9943);
    path_2.cubicTo(50.9094, 87.3391, 47.6315, 87.3391, 47.1923, 86.9943);
    path_2.cubicTo(47.0225, 86.8608, 46.6328, 86.7488, 46.3264, 86.7454);
    path_2.cubicTo(46.0201, 86.7419, 45.5546, 86.5914, 45.292, 86.4109);
    path_2.cubicTo(45.0295, 86.2303, 44.564, 86.0798, 44.2576, 86.0764);
    path_2.cubicTo(43.9513, 86.0729, 43.5616, 85.9609, 43.3918, 85.8274);
    path_2.cubicTo(43.2218, 85.6941, 42.8456, 85.5849, 42.5557, 85.5849);
    path_2.cubicTo(42.2657, 85.5849, 41.7614, 85.4363, 41.4347, 85.2546);
    path_2.cubicTo(40.9562, 84.9883, 40.5369, 84.9242, 39.2756, 84.9242);
    path_2.cubicTo(37.8955, 84.9242, 37.6302, 84.9728, 37.0355, 85.3345);
    path_2.cubicTo(35.575, 86.2231, 35.075, 87.3524, 34.8772, 90.2102);
    path_2.cubicTo(34.8049, 91.255, 34.666, 92.3191, 34.5684, 92.5748);
    path_2.cubicTo(34.4709, 92.8305, 34.3912, 93.8205, 34.3912, 94.7746);
    path_2.cubicTo(34.3912, 96.4081, 34.4166, 96.5447, 34.8278, 97.1177);
    path_2.cubicTo(35.068, 97.4524, 35.3509, 97.7834, 35.4566, 97.8536);
    path_2.cubicTo(35.5621, 97.9238, 35.7542, 98.0907, 35.8831, 98.2246);
    path_2.cubicTo(36.0121, 98.3586, 36.2843, 98.5435, 36.4878, 98.6353);
    path_2.cubicTo(36.6913, 98.7273, 37.2158, 99.02, 37.6535, 99.2858);
    path_2.cubicTo(38.0911, 99.5516, 38.5351, 99.7739, 38.6401, 99.78);
    path_2.cubicTo(38.7452, 99.786, 39.139, 100.005, 39.5154, 100.266);
    path_2.cubicTo(39.8917, 100.527, 40.3555, 100.79, 40.5458, 100.851);
    path_2.cubicTo(40.7363, 100.912, 41.2017, 101.14, 41.5802, 101.357);
    path_2.cubicTo(41.9588, 101.574, 42.7153, 101.986, 43.2613, 102.271);
    path_2.cubicTo(43.8074, 102.556, 44.295, 102.859, 44.3449, 102.942);
    path_2.cubicTo(44.3948, 103.026, 44.5637, 103.095, 44.7201, 103.095);
    path_2.cubicTo(44.8765, 103.095, 45.1698, 103.243, 45.3716, 103.425);
    path_2.cubicTo(45.5734, 103.607, 45.8565, 103.755, 46.0007, 103.755);
    path_2.cubicTo(46.1448, 103.755, 46.3307, 103.826, 46.4139, 103.912);
    path_2.cubicTo(46.497, 103.998, 46.909, 104.258, 47.3295, 104.49);
    path_2.cubicTo(47.9803, 104.849, 48.2996, 104.912, 49.4802, 104.912);
    path_2.cubicTo(50.5625, 104.912, 50.9968, 104.839, 51.4603, 104.581);
    path_2.cubicTo(51.787, 104.4, 52.2197, 104.251, 52.4222, 104.251);
    path_2.cubicTo(52.6246, 104.251, 52.9292, 104.142, 53.0991, 104.008);
    path_2.cubicTo(53.2689, 103.875, 53.6228, 103.763, 53.8854, 103.76);
    path_2.cubicTo(54.148, 103.756, 54.5777, 103.606, 54.8402, 103.425);
    path_2.cubicTo(55.1028, 103.244, 55.5415, 103.096, 55.8154, 103.096);
    path_2.cubicTo(56.0891, 103.095, 56.4022, 102.983, 56.5112, 102.847);
    path_2.cubicTo(56.6202, 102.711, 56.9332, 102.599, 57.2069, 102.598);
    path_2.cubicTo(57.4808, 102.597, 57.9195, 102.449, 58.1821, 102.269);
    path_2.cubicTo(58.4447, 102.088, 58.8427, 101.94, 59.0667, 101.94);
    path_2.cubicTo(59.2907, 101.939, 59.6129, 101.829, 59.7829, 101.696);
    path_2.cubicTo(59.9527, 101.562, 60.3443, 101.451, 60.653, 101.448);
    path_2.cubicTo(60.9619, 101.445, 61.3558, 101.341, 61.5283, 101.216);
    path_2.cubicTo(61.7009, 101.091, 62.0929, 100.936, 62.3992, 100.87);
    path_2.cubicTo(62.7056, 100.804, 63.1149, 100.645, 63.3087, 100.518);
    path_2.cubicTo(63.5025, 100.391, 63.8647, 100.286, 64.1138, 100.286);
    path_2.cubicTo(64.3627, 100.286, 64.7053, 100.177, 64.8752, 100.044);
    path_2.cubicTo(65.045, 99.9105, 65.3273, 99.7965, 65.5024, 99.7906);
    path_2.cubicTo(65.6774, 99.7847, 66.1071, 99.6362, 66.4572, 99.4606);
    path_2.cubicTo(66.8073, 99.285, 67.2728, 99.1365, 67.4916, 99.1305);
    path_2.cubicTo(67.7104, 99.1246, 68.0285, 99.0106, 68.1983, 98.8771);
    path_2.cubicTo(68.3683, 98.7438, 68.7263, 98.6341, 68.994, 98.6335);
    path_2.cubicTo(69.2618, 98.633, 69.6956, 98.4848, 69.9582, 98.3043);
    path_2.cubicTo(70.2208, 98.1237, 70.654, 97.9755, 70.921, 97.975);
    path_2.cubicTo(71.1879, 97.9744, 71.4866, 97.8906, 71.5846, 97.7889);
    path_2.cubicTo(71.6825, 97.6873, 72.037, 97.5444, 72.3723, 97.4716);
    path_2.cubicTo(72.7075, 97.3987, 73.3033, 97.216, 73.6962, 97.0655);
    path_2.cubicTo(74.4995, 96.758, 76.1423, 96.8435, 77.255, 97.251);
    path_2.cubicTo(77.5963, 97.3761, 78.3856, 97.481, 79.0093, 97.4841);
    path_2.cubicTo(79.6905, 97.4877, 80.3018, 97.5842, 80.5408, 97.7261);
    path_2.cubicTo(80.7596, 97.8559, 81.2967, 97.9665, 81.7343, 97.9717);
    path_2.cubicTo(82.172, 97.9769, 82.8422, 98.1282, 83.2237, 98.3079);
    path_2.cubicTo(83.6053, 98.4876, 84.214, 98.6369, 84.5764, 98.6399);
    path_2.cubicTo(84.9389, 98.6427, 85.3744, 98.7542, 85.5442, 98.8877);
    path_2.cubicTo(85.7142, 99.021, 86.0546, 99.1302, 86.3008, 99.1302);
    path_2.cubicTo(86.5469, 99.1302, 87.0154, 99.2789, 87.3422, 99.4606);
    path_2.cubicTo(87.6687, 99.6423, 88.116, 99.7933, 88.3361, 99.7962);
    path_2.cubicTo(88.5562, 99.799, 88.8754, 99.9105, 89.0452, 100.044);
    path_2.cubicTo(89.2152, 100.177, 89.5465, 100.286, 89.7817, 100.286);
    path_2.cubicTo(90.0168, 100.286, 90.2921, 100.39, 90.3934, 100.517);
    path_2.cubicTo(90.4948, 100.644, 90.8186, 100.794, 91.1131, 100.852);
    path_2.cubicTo(91.4075, 100.909, 91.7359, 101.066, 91.843, 101.199);
    path_2.cubicTo(91.9501, 101.333, 92.1992, 101.443, 92.3965, 101.443);
    path_2.cubicTo(92.5938, 101.443, 92.8445, 101.554, 92.9535, 101.691);
    path_2.cubicTo(93.0625, 101.827, 93.2681, 101.943, 93.4105, 101.949);
    path_2.cubicTo(93.5531, 101.955, 94.0276, 102.174, 94.4653, 102.436);
    path_2.cubicTo(94.9029, 102.697, 95.6906, 103.142, 96.2158, 103.424);
    path_2.cubicTo(97.2809, 103.995, 97.4567, 104.1, 98.6297, 104.868);
    path_2.cubicTo(99.0823, 105.165, 99.5062, 105.407, 99.5721, 105.407);
    path_2.cubicTo(99.6378, 105.407, 99.8232, 105.531, 99.9838, 105.682);
    path_2.cubicTo(100.323, 106.001, 100.871, 106.348, 101.268, 106.498);
    path_2.cubicTo(101.422, 106.555, 101.547, 106.667, 101.547, 106.746);
    path_2.cubicTo(101.547, 106.825, 101.78, 107.002, 102.064, 107.139);
    path_2.cubicTo(102.349, 107.277, 102.796, 107.534, 103.059, 107.712);
    path_2.cubicTo(103.321, 107.889, 103.686, 108.131, 103.869, 108.249);
    path_2.cubicTo(104.719, 108.795, 107.274, 110.57, 107.972, 111.097);
    path_2.cubicTo(108.399, 111.42, 108.838, 111.684, 108.947, 111.684);
    path_2.cubicTo(109.057, 111.684, 109.236, 111.796, 109.345, 111.932);
    path_2.cubicTo(109.689, 112.363, 111.92, 112.268, 112.91, 111.78);
    path_2.cubicTo(114.637, 110.929, 115.066, 109.984, 115.238, 106.646);
    path_2.cubicTo(115.304, 105.374, 115.438, 104.073, 115.534, 103.755);
    path_2.cubicTo(115.631, 103.437, 115.753, 102.013, 115.804, 100.589);
    path_2.lineTo(115.898, 98.001);
    path_2.lineTo(115.471, 97.2446);
    path_2.cubicTo(114.957, 96.3336, 112.961, 94.2298, 111.283, 92.8302);
    path_2.cubicTo(110.611, 92.2692, 109.953, 91.7095, 109.822, 91.5866);
    path_2.cubicTo(109.523, 91.3067, 107.119, 89.5494, 107.035, 89.5494);
    path_2.cubicTo(107.001, 89.5494, 106.665, 89.3353, 106.289, 89.0738);
    path_2.cubicTo(105.913, 88.8122, 105.211, 88.387, 104.73, 88.1291);
    path_2.cubicTo(104.248, 87.8711, 103.783, 87.6007, 103.695, 87.5282);
    path_2.cubicTo(103.268, 87.174, 100.982, 86.0805, 100.669, 86.0805);
    path_2.cubicTo(100.473, 86.0805, 100.224, 85.969, 100.115, 85.8327);
    path_2.cubicTo(100.006, 85.6964, 99.6744, 85.5849, 99.3784, 85.5849);
    path_2.cubicTo(99.0825, 85.5849, 98.5732, 85.4363, 98.2465, 85.2546);
    path_2.cubicTo(97.9123, 85.0686, 97.3386, 84.9217, 96.9343, 84.9184);
    path_2.cubicTo(96.5391, 84.9151, 96.0367, 84.8063, 95.8179, 84.6764);
    path_2.cubicTo(95.5991, 84.5466, 95.0466, 84.4377, 94.59, 84.4344);
    path_2.cubicTo(94.1335, 84.4313, 93.5248, 84.3213, 93.2374, 84.1901);
    path_2.cubicTo(92.95, 84.0588, 92.4352, 83.9047, 92.0935, 83.8474);
    path_2.cubicTo(91.617, 83.7676, 91.2636, 83.5246, 90.5782, 82.8059);
    path_2.cubicTo(89.8183, 82.0088, 89.6571, 81.7303, 89.5032, 80.9483);
    path_2.cubicTo(89.374, 80.2916, 89.3697, 79.819, 89.4886, 79.2965);
    path_2.cubicTo(89.701, 78.3615, 89.6702, 78.4369, 90.396, 77.0779);
    path_2.cubicTo(91.3721, 75.2498, 92.3169, 73.2599, 92.3169, 73.032);
    path_2.cubicTo(92.3169, 72.4601, 94.7506, 70.2227, 95.3727, 70.2227);
    path_2.cubicTo(95.5842, 70.2227, 95.8961, 70.1135, 96.066, 69.9802);
    path_2.cubicTo(96.3218, 69.7793, 97.2185, 69.7367, 101.275, 69.7324);
    path_2.cubicTo(105.855, 69.7274, 106.215, 69.7056, 106.798, 69.3967);
    path_2.cubicTo(107.141, 69.215, 107.667, 69.0663, 107.966, 69.0663);
    path_2.cubicTo(108.265, 69.0663, 108.599, 68.9548, 108.708, 68.8186);
    path_2.cubicTo(108.817, 68.6823, 109.148, 68.5708, 109.444, 68.5708);
    path_2.cubicTo(109.74, 68.5708, 110.249, 68.4221, 110.576, 68.2404);
    path_2.cubicTo(110.903, 68.0587, 111.35, 67.9077, 111.57, 67.9048);
    path_2.cubicTo(111.79, 67.902, 112.109, 67.7905, 112.279, 67.657);
    path_2.cubicTo(112.449, 67.5237, 112.837, 67.4145, 113.142, 67.4145);
    path_2.cubicTo(113.446, 67.4145, 113.817, 67.3007, 113.965, 67.1616);
    path_2.cubicTo(114.113, 67.0223, 114.484, 66.8882, 114.788, 66.8633);
    path_2.cubicTo(115.498, 66.8053, 116.139, 66.2783, 116.55, 65.4151);
    path_2.cubicTo(116.855, 64.7751, 116.863, 64.6506, 116.669, 63.3896);
    path_2.cubicTo(116.556, 62.6505, 116.419, 60.9681, 116.365, 59.6508);
    path_2.cubicTo(116.231, 56.386, 115.977, 55.9726, 113.667, 55.2708);
    path_2.cubicTo(112.805, 55.009, 112.584, 54.9953, 112.155, 55.1764);
    path_2.cubicTo(111.878, 55.293, 111.378, 55.4464, 111.043, 55.5176);
    path_2.cubicTo(110.707, 55.5887, 110.353, 55.7301, 110.255, 55.8317);
    path_2.cubicTo(110.157, 55.9334, 109.894, 56.0172, 109.671, 56.0178);
    path_2.cubicTo(109.448, 56.0183, 109.05, 56.1665, 108.788, 56.347);
    path_2.cubicTo(108.525, 56.5276, 108.158, 56.6758, 107.972, 56.6762);
    path_2.cubicTo(107.785, 56.6769, 107.544, 56.7889, 107.435, 56.9252);
    path_2.cubicTo(107.326, 57.0615, 107.082, 57.173, 106.894, 57.173);
    path_2.cubicTo(106.705, 57.173, 106.41, 57.275, 106.237, 57.3996);
    path_2.cubicTo(106.064, 57.5243, 105.672, 57.6802, 105.366, 57.7462);
    path_2.cubicTo(105.06, 57.8122, 104.65, 57.9703, 104.457, 58.0977);
    path_2.cubicTo(104.263, 58.225, 103.849, 58.3293, 103.537, 58.3293);
    path_2.cubicTo(103.224, 58.3293, 102.712, 58.4408, 102.398, 58.577);
    path_2.cubicTo(102, 58.7497, 101.258, 58.8248, 99.9555, 58.8248);
    path_2.cubicTo(98.6526, 58.8248, 97.9114, 58.7497, 97.5134, 58.577);
    path_2.cubicTo(97.1992, 58.4408, 96.5832, 58.3293, 96.1445, 58.3293);
    path_2.cubicTo(95.7059, 58.3293, 95.077, 58.224, 94.7469, 58.0954);
    path_2.cubicTo(94.417, 57.9665, 93.6689, 57.8164, 93.0844, 57.7615);
    path_2.cubicTo(92.5001, 57.7067, 91.7684, 57.5519, 91.4585, 57.4174);
    path_2.cubicTo(91.1485, 57.283, 90.5166, 57.1703, 90.0543, 57.1672);
    path_2.cubicTo(89.592, 57.1639, 89.0347, 57.055, 88.8159, 56.9252);
    path_2.cubicTo(88.5925, 56.7927, 87.9844, 56.6865, 87.4294, 56.6832);
    path_2.cubicTo(86.8281, 56.6797, 86.1241, 56.5479, 85.6332, 56.347);
    path_2.cubicTo(85.1703, 56.1577, 84.4377, 56.0142, 83.9166, 56.0109);
    path_2.cubicTo(83.4166, 56.0076, 82.8284, 55.8987, 82.6096, 55.7689);
    path_2.cubicTo(82.3908, 55.639, 81.847, 55.5302, 81.4013, 55.5269);
    path_2.cubicTo(80.9554, 55.5237, 80.1743, 55.3724, 79.6656, 55.1907);
    path_2.cubicTo(79.1568, 55.009, 78.3758, 54.8577, 77.9298, 54.8546);
    path_2.cubicTo(77.4841, 54.8513, 76.9403, 54.7424, 76.7215, 54.6126);
    path_2.cubicTo(76.5027, 54.4827, 75.9134, 54.3739, 75.4118, 54.3706);
    path_2.cubicTo(74.9104, 54.3674, 74.2301, 54.2592, 73.9, 54.1302);
    path_2.cubicTo(73.5701, 54.0012, 72.8376, 53.8471, 72.2725, 53.7878);
    path_2.cubicTo(71.7075, 53.7285, 71.0004, 53.5739, 70.7015, 53.4442);
    path_2.cubicTo(70.4027, 53.3146, 69.755, 53.2059, 69.2625, 53.2027);
    path_2.cubicTo(68.7699, 53.1994, 68.1878, 53.0906, 67.969, 52.9607);
    path_2.cubicTo(67.74, 52.8248, 67.1313, 52.7222, 66.5344, 52.7187);
    path_2.cubicTo(65.8103, 52.7148, 65.3186, 52.6133, 64.9039, 52.3826);
    path_2.cubicTo(64.4997, 52.1578, 64.006, 52.0522, 63.3579, 52.0522);
    path_2.cubicTo(62.8341, 52.0522, 62.1357, 51.9468, 61.8056, 51.8178);
    path_2.cubicTo(61.0706, 51.5307, 55.7088, 51.3878, 52.0553, 51.5581);
    path_2.close();

    Paint paint2Fill = Paint()..style = PaintingStyle.fill;
    paint2Fill.color = const Color(0xff21262B).withOpacity(1.0);
    canvas.drawPath(path_2, paint2Fill);

    Path path_3 = Path();
    path_3.moveTo(83.1998, 176.8);
    path_3.cubicTo(83.1998, 180.777, 79.9763, 184, 75.9998, 184);
    path_3.cubicTo(72.0234, 184, 68.7998, 180.777, 68.7998, 176.8);
    path_3.cubicTo(68.7998, 172.824, 72.0234, 169.6, 75.9998, 169.6);
    path_3.cubicTo(79.9763, 169.6, 83.1998, 172.824, 83.1998, 176.8);
    path_3.close();

    Paint paint3Fill = Paint()..style = PaintingStyle.fill;
    paint3Fill.color = const Color(0xff21262B).withOpacity(1.0);
    canvas.drawPath(path_3, paint3Fill);

    Path path_4 = Path();
    path_4.moveTo(81.9998, 176.8);
    path_4.cubicTo(81.9998, 180.114, 79.3135, 182.8, 75.9998, 182.8);
    path_4.lineTo(75.9998, 185.2);
    path_4.cubicTo(80.639, 185.2, 84.3998, 181.439, 84.3998, 176.8);
    path_4.lineTo(81.9998, 176.8);
    path_4.close();
    path_4.moveTo(75.9998, 182.8);
    path_4.cubicTo(72.6861, 182.8, 69.9998, 180.114, 69.9998, 176.8);
    path_4.lineTo(67.5998, 176.8);
    path_4.cubicTo(67.5998, 181.439, 71.3606, 185.2, 75.9998, 185.2);
    path_4.lineTo(75.9998, 182.8);
    path_4.close();
    path_4.moveTo(69.9998, 176.8);
    path_4.cubicTo(69.9998, 173.486, 72.6861, 170.8, 75.9998, 170.8);
    path_4.lineTo(75.9998, 168.4);
    path_4.cubicTo(71.3606, 168.4, 67.5998, 172.161, 67.5998, 176.8);
    path_4.lineTo(69.9998, 176.8);
    path_4.close();
    path_4.moveTo(75.9998, 170.8);
    path_4.cubicTo(79.3135, 170.8, 81.9998, 173.486, 81.9998, 176.8);
    path_4.lineTo(84.3998, 176.8);
    path_4.cubicTo(84.3998, 172.161, 80.639, 168.4, 75.9998, 168.4);
    path_4.lineTo(75.9998, 170.8);
    path_4.close();

    Paint paint4Fill = Paint()..style = PaintingStyle.fill;
    paint4Fill.color = const Color(0xffDDF247).withOpacity(1.0);
    canvas.drawPath(path_4, paint4Fill);

    canvas.restore();
  }

  @override
  void drawing(Offset nowPoint) {
    startPoint = nowPoint;
  }

  @override
  void startDraw(Offset startPoint) {
    startPoint = startPoint;
  }

  @override
  Map<String, dynamic> toContentJson() {
    // TODO: implement toContentJson
    throw UnimplementedError();
  }
}
